{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/React/All project/poconboard/src/components/Register/register.js\";\nimport React, { Component, useState } from \"react\";\nimport { Col, Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { Link, Redirect } from \"react-router-dom\"; // import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./register.css\";\nimport { useDispatch } from \"react-redux\";\nimport { USER_REGISTER } from \"../../components/constant/type\";\n\nfunction Register() {\n  const dispatch = useDispatch();\n\n  const fnRegister = res => {\n    dispatch({\n      type: USER_REGISTER,\n      payload: res\n    });\n  };\n\n  const [userInfo, setuserInfo] = useState({\n    name: \"\",\n    password: \"\",\n    email: \"\",\n    mobile: \"\"\n  });\n  const [success, setsuccess] = useState(false); //   const fnonChange = (evt) => {\n  //     this.setState({ [evt.target.name]: evt.target.value });\n  //   };\n\n  const handleSubmit = () => {\n    console.log(userInfo);\n    fnRegister(userInfo);\n    setuserInfo({\n      name: \"\",\n      email: \"\",\n      mobile: \"\",\n      password: \"\"\n    });\n    alert(\"User Regiser Successully !!\");\n    setsuccess(true);\n  };\n\n  if (success) {\n    setsuccess(false);\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"section\", {\n    className: \"login_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"5\",\n    className: \"reg-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: userInfo.name,\n    name: \"name\",\n    id: \"name\",\n    placeholder: \"Username\",\n    required: true,\n    onChange: event => setuserInfo({\n      name: event.target.value,\n      password: userInfo.password,\n      email: userInfo.email,\n      mobile: userInfo.mobile\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: userInfo.email,\n    name: \"email\",\n    id: \"email\",\n    placeholder: \"Email\",\n    required: true,\n    onChange: event => setuserInfo({\n      name: userInfo.name,\n      password: userInfo.password,\n      email: event.target.value,\n      mobile: userInfo.mobile\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Mobile\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: userInfo.mobile,\n    name: \"mobile\",\n    id: \"mobile\",\n    placeholder: \"Mobile\",\n    required: true,\n    onChange: event => setuserInfo({\n      name: userInfo.name,\n      password: userInfo.password,\n      email: userInfo.email,\n      mobile: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"examplePassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    value: userInfo.password,\n    name: \"password\",\n    id: \"examplePassword\",\n    placeholder: \"********\",\n    required: true,\n    onChange: event => setuserInfo({\n      name: userInfo.name,\n      password: event.target.value,\n      email: userInfo.email,\n      mobile: userInfo.mobile\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"reg_btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, \"REGISTER\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, \"Having account ! \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 40\n    }\n  }, \" Login \"), \" \")))))))));\n}\n\nexport default Register; // export class Register extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//   name: \"\",\n//   password: \"\",\n//   email: \"\",\n//   mobile: \"\",\n//     };\n//   }\n//   fnonChange = (evt) => {\n//     this.setState({ [evt.target.name]: evt.target.value });\n//   };\n//   fnRegister = (event) => {\n//     event.preventDefault();\n// this.props.fnRegister(this.state);\n// this.setState({ name: \"\", email: \"\", mobile: \"\", password: \"\" });\n// alert(\"User Regiser Successully !!\");\n//   };\n//   render() {\n// return (\n//   <section className=\"login_container\">\n//     <div className=\"container-fluid h-100\">\n//       <div className=\"row h-100\">\n//         <Col sm=\"5\" className=\"reg-container\">\n//           <div>\n//             <h1>Register</h1>\n//             <Form onSubmit={this.fnRegister}>\n//               <FormGroup>\n//                 <Label for=\"name\">Username</Label>\n//                 <Input\n//                   type=\"text\"\n//                   value={this.state.name}\n//                   name=\"name\"\n//                   id=\"name\"\n//                   placeholder=\"Username\"\n//                   required\n//                   onChange={this.fnonChange}\n//                 />\n//               </FormGroup>\n//               <FormGroup>\n//                 <Label for=\"email\">Email</Label>\n//                 <Input\n//                   type=\"text\"\n//                   value={this.state.email}\n//                   name=\"email\"\n//                   id=\"email\"\n//                   placeholder=\"Email\"\n//                   required\n//                   onChange={this.fnonChange}\n//                 />\n//               </FormGroup>\n//               <FormGroup>\n//                 <Label for=\"mobile\">Mobile</Label>\n//                 <Input\n//                   type=\"text\"\n//                   value={this.state.mobile}\n//                   name=\"mobile\"\n//                   id=\"mobile\"\n//                   placeholder=\"Mobile\"\n//                   required\n//                   onChange={this.fnonChange}\n//                 />\n//               </FormGroup>\n//               <FormGroup>\n//                 <Label for=\"examplePassword\">Password</Label>\n//                 <Input\n//                   type=\"password\"\n//                   value={this.state.password}\n//                   name=\"password\"\n//                   id=\"examplePassword\"\n//                   placeholder=\"********\"\n//                   required\n//                   onChange={this.fnonChange}\n//                 />\n//               </FormGroup>\n//               <FormGroup>\n//                 <Button type=\"submit\" className=\"reg_btn\">\n//                   REGISTER\n//                 </Button>\n//                 <p>\n//                   Having account ! <Link to=\"/\"> Login </Link>{\" \"}\n//                 </p>\n//               </FormGroup>\n//             </Form>\n//           </div>\n//         </Col>\n//       </div>\n//     </div>\n//   </section>\n// );\n//   }\n// }\n// const mapDispatchToProps = {\n//   fnRegister: fnuserRegister,\n// };\n// export default connect(null, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/home/ubuntu/Desktop/React/All project/poconboard/src/components/Register/register.js"],"names":["React","Component","useState","Col","Form","FormGroup","Label","Input","Button","Link","Redirect","useDispatch","USER_REGISTER","Register","dispatch","fnRegister","res","type","payload","userInfo","setuserInfo","name","password","email","mobile","success","setsuccess","handleSubmit","console","log","alert","event","target","value"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { Col, Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./register.css\";\nimport { useDispatch } from \"react-redux\";\n\nimport { USER_REGISTER } from \"../../components/constant/type\";\n\nfunction Register() {\n  const dispatch = useDispatch();\n\n  const fnRegister = (res) => {\n    dispatch({ type: USER_REGISTER, payload: res });\n  };\n\n  const [userInfo, setuserInfo] = useState({\n    name: \"\",\n    password: \"\",\n    email: \"\",\n    mobile: \"\",\n  });\n  const [success, setsuccess] = useState(false);\n  //   const fnonChange = (evt) => {\n  //     this.setState({ [evt.target.name]: evt.target.value });\n  //   };\n\n  const handleSubmit = () => {\n    console.log(userInfo);\n    fnRegister(userInfo);\n    setuserInfo({ name: \"\", email: \"\", mobile: \"\", password: \"\" });\n\n    alert(\"User Regiser Successully !!\");\n    setsuccess(true);\n  };\n  if (success) {\n    setsuccess(false);\n    return <Redirect to={\"/\"} />;\n  }\n  return (\n    <div>\n      {\" \"}\n      <section className=\"login_container\">\n        <div className=\"container-fluid h-100\">\n          <div className=\"row h-100\">\n            <Col sm=\"5\" className=\"reg-container\">\n              <div>\n                <h1>Register</h1>\n                <Form onSubmit={handleSubmit}>\n                  <FormGroup>\n                    <Label for=\"name\">Username</Label>\n                    <Input\n                      type=\"text\"\n                      value={userInfo.name}\n                      name=\"name\"\n                      id=\"name\"\n                      placeholder=\"Username\"\n                      required\n                      onChange={(event) =>\n                        setuserInfo({\n                          name: event.target.value,\n                          password: userInfo.password,\n                          email: userInfo.email,\n                          mobile: userInfo.mobile,\n                        })\n                      }\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"email\">Email</Label>\n                    <Input\n                      type=\"text\"\n                      value={userInfo.email}\n                      name=\"email\"\n                      id=\"email\"\n                      placeholder=\"Email\"\n                      required\n                      onChange={(event) =>\n                        setuserInfo({\n                          name: userInfo.name,\n                          password: userInfo.password,\n                          email: event.target.value,\n                          mobile: userInfo.mobile,\n                        })\n                      }\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"mobile\">Mobile</Label>\n                    <Input\n                      type=\"text\"\n                      value={userInfo.mobile}\n                      name=\"mobile\"\n                      id=\"mobile\"\n                      placeholder=\"Mobile\"\n                      required\n                      onChange={(event) =>\n                        setuserInfo({\n                          name: userInfo.name,\n                          password: userInfo.password,\n                          email: userInfo.email,\n                          mobile: event.target.value,\n                        })\n                      }\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"examplePassword\">Password</Label>\n                    <Input\n                      type=\"password\"\n                      value={userInfo.password}\n                      name=\"password\"\n                      id=\"examplePassword\"\n                      placeholder=\"********\"\n                      required\n                      onChange={(event) =>\n                        setuserInfo({\n                          name: userInfo.name,\n                          password: event.target.value,\n                          email: userInfo.email,\n                          mobile: userInfo.mobile,\n                        })\n                      }\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Button type=\"submit\" className=\"reg_btn\">\n                      REGISTER\n                    </Button>\n                    <p>\n                      Having account ! <Link to=\"/\"> Login </Link>{\" \"}\n                    </p>\n                  </FormGroup>\n                </Form>\n              </div>\n            </Col>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Register;\n\n// export class Register extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//   name: \"\",\n//   password: \"\",\n//   email: \"\",\n//   mobile: \"\",\n//     };\n//   }\n//   fnonChange = (evt) => {\n//     this.setState({ [evt.target.name]: evt.target.value });\n//   };\n\n//   fnRegister = (event) => {\n//     event.preventDefault();\n// this.props.fnRegister(this.state);\n// this.setState({ name: \"\", email: \"\", mobile: \"\", password: \"\" });\n// alert(\"User Regiser Successully !!\");\n//   };\n\n//   render() {\n// return (\n//   <section className=\"login_container\">\n//     <div className=\"container-fluid h-100\">\n//       <div className=\"row h-100\">\n//         <Col sm=\"5\" className=\"reg-container\">\n//           <div>\n//             <h1>Register</h1>\n//             <Form onSubmit={this.fnRegister}>\n//               <FormGroup>\n//                 <Label for=\"name\">Username</Label>\n//                 <Input\n//                   type=\"text\"\n//                   value={this.state.name}\n//                   name=\"name\"\n//                   id=\"name\"\n//                   placeholder=\"Username\"\n//                   required\n//                   onChange={this.fnonChange}\n//                 />\n//               </FormGroup>\n//               <FormGroup>\n//                 <Label for=\"email\">Email</Label>\n//                 <Input\n//                   type=\"text\"\n//                   value={this.state.email}\n//                   name=\"email\"\n//                   id=\"email\"\n//                   placeholder=\"Email\"\n//                   required\n//                   onChange={this.fnonChange}\n//                 />\n//               </FormGroup>\n//               <FormGroup>\n//                 <Label for=\"mobile\">Mobile</Label>\n//                 <Input\n//                   type=\"text\"\n//                   value={this.state.mobile}\n//                   name=\"mobile\"\n//                   id=\"mobile\"\n//                   placeholder=\"Mobile\"\n//                   required\n//                   onChange={this.fnonChange}\n//                 />\n//               </FormGroup>\n//               <FormGroup>\n//                 <Label for=\"examplePassword\">Password</Label>\n//                 <Input\n//                   type=\"password\"\n//                   value={this.state.password}\n//                   name=\"password\"\n//                   id=\"examplePassword\"\n//                   placeholder=\"********\"\n//                   required\n//                   onChange={this.fnonChange}\n//                 />\n//               </FormGroup>\n//               <FormGroup>\n//                 <Button type=\"submit\" className=\"reg_btn\">\n//                   REGISTER\n//                 </Button>\n//                 <p>\n//                   Having account ! <Link to=\"/\"> Login </Link>{\" \"}\n//                 </p>\n//               </FormGroup>\n//             </Form>\n//           </div>\n//         </Col>\n//       </div>\n//     </div>\n//   </section>\n// );\n//   }\n// }\n\n// const mapDispatchToProps = {\n//   fnRegister: fnuserRegister,\n// };\n// export default connect(null, mapDispatchToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}