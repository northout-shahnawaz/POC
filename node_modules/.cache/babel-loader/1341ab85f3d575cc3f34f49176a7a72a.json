{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/React/All project/poconboard/src/components/Welcome/Welcome.js\";\nimport React, { useState } from \"react\";\nimport FacebookLogin from \"react-facebook-login\";\nimport GoogleLogin from \"node_modules/react-google-login\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport \"./Welcome.css\";\nimport { useDispatch } from \"react-redux\";\n\nfunction Welcome(props) {\n  console.log(\"welcome screen\", props, props.data.userList);\n  const dispatch = useDispatch();\n  const [userInfo, setuserInfo] = useState({\n    name: \"\",\n    password: \"\"\n  });\n\n  const fnLogin = res => {\n    dispatch({\n      type: \"AUTH_LOGIN\",\n      payload: res\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const userData = props.data.userList;\n    let loginUser = userData.length > 0 ? userData.find(user => user.name === userInfo.name && user.password === userInfo.password) : undefined;\n\n    if (loginUser === undefined) {\n      alert(\"Invalied userid and passoword\");\n    } else {\n      fnLogin(loginUser);\n    }\n  };\n\n  const responseFacebook = response => {\n    console.log(\"facebook console\");\n    console.log(response);\n    const resp = {\n      name: response.name,\n      imageUrl: response.picture.data.url\n    };\n    fnLogin(resp);\n  };\n\n  const responseGoogle = response => {\n    console.log(\"google console\");\n    console.log(response);\n    fnLogin(response.profileObj);\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"login_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"4\",\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: userInfo.name,\n    name: \"name\",\n    id: \"username\",\n    placeholder: \"Username\",\n    required: true,\n    onChange: event => setuserInfo({\n      name: event.target.value,\n      password: userInfo.password\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"examplePassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    value: userInfo.password,\n    name: \"password\",\n    id: \"examplePassword\",\n    placeholder: \"********\",\n    required: true,\n    onChange: event => setuserInfo({\n      name: userInfo.name,\n      password: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"login_btn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, \"SIGN IN\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, \"Don't have account ! \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 42\n    }\n  }, \"Register \"), \" \"))), /*#__PURE__*/React.createElement(FacebookLogin, {\n    appId: \"1015016365581153\",\n    autoLoad: true,\n    fields: \"name,email,picture\",\n    onClick: \"\",\n    callback: responseFacebook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \"Or\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(GoogleLogin, {\n    className: \"loginBtn\",\n    clientId: \"681084349248-r4e15s99nabjgtpp3bjffd8ba3l5itu8.apps.googleusercontent.com\",\n    buttonText: \"login with google\",\n    onSuccess: responseGoogle,\n    onFailure: responseGoogle,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Welcome; // if (sessionStorage.getItem(\"userData\")) {\n//   const data = JSON.parse(sessionStorage.getItem(\"userData\"));\n//   console.log(\"dta\", data);\n//   fnLogin(data.userInfo);\n//   return <Redirect to={\"/home\"} />;\n// }\n// const sessionData = {\n//   isLoggedin: true,\n//   userInfo: resp,\n//   uid: \"admin\",\n//   password: \"admin\",\n// };\n// sessionStorage.setItem(\"userData\", JSON.stringify(sessionData));","map":{"version":3,"sources":["/home/ubuntu/Desktop/React/All project/poconboard/src/components/Welcome/Welcome.js"],"names":["React","useState","FacebookLogin","GoogleLogin","Link","Col","Form","FormGroup","Label","Input","Button","useDispatch","Welcome","props","console","log","data","userList","dispatch","userInfo","setuserInfo","name","password","fnLogin","res","type","payload","handleSubmit","event","preventDefault","userData","loginUser","length","find","user","undefined","alert","responseFacebook","response","resp","imageUrl","picture","url","responseGoogle","profileObj","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport FacebookLogin from \"react-facebook-login\";\nimport GoogleLogin from \"node_modules/react-google-login\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport \"./Welcome.css\";\nimport { useDispatch } from \"react-redux\";\n\nfunction Welcome(props) {\n  console.log(\"welcome screen\", props, props.data.userList);\n\n  const dispatch = useDispatch();\n\n  const [userInfo, setuserInfo] = useState({\n    name: \"\",\n    password: \"\",\n  });\n\n  const fnLogin = (res) => {\n    dispatch({ type: \"AUTH_LOGIN\", payload: res });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const userData = props.data.userList;\n    let loginUser =\n      userData.length > 0\n        ? userData.find(\n            (user) =>\n              user.name === userInfo.name && user.password === userInfo.password\n          )\n        : undefined;\n    if (loginUser === undefined) {\n      alert(\"Invalied userid and passoword\");\n    } else {\n      fnLogin(loginUser);\n    }\n  };\n\n  const responseFacebook = (response) => {\n    console.log(\"facebook console\");\n    console.log(response);\n\n    const resp = { name: response.name, imageUrl: response.picture.data.url };\n\n    fnLogin(resp);\n  };\n\n  const responseGoogle = (response) => {\n    console.log(\"google console\");\n    console.log(response);\n    fnLogin(response.profileObj);\n  };\n\n  return (\n    <section className=\"login_container\">\n      <div className=\"container-fluid h-100\">\n        <div className=\"row h-100\">\n          <Col sm=\"4\" className=\"login-container\">\n            <div>\n              <h1>Login</h1>\n              <Form onSubmit={handleSubmit}>\n                <FormGroup>\n                  <Label for=\"username\">Username</Label>\n                  <Input\n                    type=\"text\"\n                    value={userInfo.name}\n                    name=\"name\"\n                    id=\"username\"\n                    placeholder=\"Username\"\n                    required\n                    onChange={(event) =>\n                      setuserInfo({\n                        name: event.target.value,\n                        password: userInfo.password,\n                      })\n                    }\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"examplePassword\">Password</Label>\n                  <Input\n                    type=\"password\"\n                    value={userInfo.password}\n                    name=\"password\"\n                    id=\"examplePassword\"\n                    placeholder=\"********\"\n                    required\n                    onChange={(event) =>\n                      setuserInfo({\n                        name: userInfo.name,\n                        password: event.target.value,\n                      })\n                    }\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Button className=\"login_btn\" type=\"submit\">\n                    SIGN IN\n                  </Button>\n                  <p>\n                    Don't have account ! <Link to=\"/register\">Register </Link>{\" \"}\n                  </p>\n                </FormGroup>\n              </Form>\n              <FacebookLogin\n                appId=\"1015016365581153\"\n                autoLoad={true}\n                fields=\"name,email,picture\"\n                onClick={\"\"}\n                callback={responseFacebook}\n              />\n              <br />\n              <h6>Or</h6>\n              <br />\n              <GoogleLogin\n                className=\"loginBtn\"\n                clientId=\"681084349248-r4e15s99nabjgtpp3bjffd8ba3l5itu8.apps.googleusercontent.com\"\n                buttonText=\"login with google\"\n                onSuccess={responseGoogle}\n                onFailure={responseGoogle}\n                cookiePolicy={\"single_host_origin\"}\n              />\n            </div>\n          </Col>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Welcome;\n// if (sessionStorage.getItem(\"userData\")) {\n//   const data = JSON.parse(sessionStorage.getItem(\"userData\"));\n//   console.log(\"dta\", data);\n\n//   fnLogin(data.userInfo);\n//   return <Redirect to={\"/home\"} />;\n// }\n// const sessionData = {\n//   isLoggedin: true,\n//   userInfo: resp,\n//   uid: \"admin\",\n//   password: \"admin\",\n// };\n// sessionStorage.setItem(\"userData\", JSON.stringify(sessionData));\n"]},"metadata":{},"sourceType":"module"}