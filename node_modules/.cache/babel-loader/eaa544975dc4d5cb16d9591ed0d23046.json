{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport Reducer from \"./reducer\";\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializationState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializationState);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction loadToStore() {\n  try {\n    const serializationState = localStorage.getItem(\"state\");\n    if (serializationState === null) return undefined;\n    return JSON.parse(serializationState);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst store = createStore(Reducer, applyMiddleware(thunk));\nstore.subscribe(() => saveToLocalStorage(store.getState()));\nexport default store;","map":{"version":3,"sources":["/home/ubuntu/Desktop/React/All project/poconboard/src/components/store/index.js"],"names":["createStore","applyMiddleware","thunk","Reducer","saveToLocalStorage","state","serializationState","JSON","stringify","localStorage","setItem","error","console","log","loadToStore","getItem","undefined","parse","store","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,MAAI;AACF,UAAMC,kBAAkB,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAA3B;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,kBAA9B;AACD,GAHD,CAGE,OAAOK,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AAED,SAASG,WAAT,GAAuB;AACrB,MAAI;AACF,UAAMR,kBAAkB,GAAGG,YAAY,CAACM,OAAb,CAAqB,OAArB,CAA3B;AACA,QAAIT,kBAAkB,KAAK,IAA3B,EAAiC,OAAOU,SAAP;AACjC,WAAOT,IAAI,CAACU,KAAL,CAAWX,kBAAX,CAAP;AACD,GAJD,CAIE,OAAOK,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AAED,MAAMO,KAAK,GAAGlB,WAAW,CAACG,OAAD,EAAUF,eAAe,CAACC,KAAD,CAAzB,CAAzB;AAEAgB,KAAK,CAACC,SAAN,CAAgB,MAAMf,kBAAkB,CAACc,KAAK,CAACE,QAAN,EAAD,CAAxC;AACA,eAAeF,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport Reducer from \"./reducer\";\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializationState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializationState);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction loadToStore() {\n  try {\n    const serializationState = localStorage.getItem(\"state\");\n    if (serializationState === null) return undefined;\n    return JSON.parse(serializationState);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst store = createStore(Reducer, applyMiddleware(thunk));\n\nstore.subscribe(() => saveToLocalStorage(store.getState()));\nexport default store;\n"]},"metadata":{},"sourceType":"module"}